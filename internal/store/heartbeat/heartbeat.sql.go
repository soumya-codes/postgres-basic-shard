// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: heartbeat.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const GetLastHeartbeat = `-- name: GetLastHeartbeat :one
SELECT last_heartbeat FROM heartbeat WHERE machine_id = $1
`

func (q *Queries) GetLastHeartbeat(ctx context.Context, machineID pgtype.Text) (pgtype.Int8, error) {
	row := q.db.QueryRow(ctx, GetLastHeartbeat, machineID)
	var last_heartbeat pgtype.Int8
	err := row.Scan(&last_heartbeat)
	return last_heartbeat, err
}

const UpdateLastHeartbeat = `-- name: UpdateLastHeartbeat :one
UPDATE heartbeat SET last_heartbeat = $2 WHERE machine_id = $1 RETURNING machine_id, last_heartbeat
`

type UpdateLastHeartbeatParams struct {
	MachineID     pgtype.Text `json:"machine_id"`
	LastHeartbeat pgtype.Int8 `json:"last_heartbeat"`
}

func (q *Queries) UpdateLastHeartbeat(ctx context.Context, arg UpdateLastHeartbeatParams) (*Heartbeat, error) {
	row := q.db.QueryRow(ctx, UpdateLastHeartbeat, arg.MachineID, arg.LastHeartbeat)
	var i Heartbeat
	err := row.Scan(&i.MachineID, &i.LastHeartbeat)
	return &i, err
}
